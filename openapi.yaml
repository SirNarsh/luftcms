openapi: "3.0.0"
info:
  version: 0.1.0
  title: Luftcms API [WIP]
  license:
    name: MIT
servers:
  - url: https://api-testing.luftcms.com/
paths:
  /items:
    get:
      summary: List all items available
      operationId: listItems
      tags:
        - items
      parameters:
        - name: limit
          in: query
          description: How many items to return at one time (max 100)
          required: false
          schema:
            type: integer
            format: int32
        - name: offset
          in: query
          description: Skip x items (pagination)
          required: false
          schema:
            type: integer
            format: int32
        - name: type_id
          in: query
          description: filter by type_id
          required: true
          schema:
            type: integer
            format: int32
        - name: collection_id
          in: query
          description: filter by collection_id
          required: false
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: A paged array of items
          headers:
            x-next:
              description: A link to the next page of responses
              schema:
                type: string
          content:
            application/json:    
              schema:
                $ref: "#/components/schemas/Items"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Create a new item
      operationId: createItem
      tags:
        - items
      responses:
        '201':
          description: Null response
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /item/{itemId}:
    get:
      summary: Info for a specific Item
      operationId: showItemById
      tags:
        - items
      parameters:
        - name: itemId
          in: path
          required: true
          description: The id of the item to retrieve
          schema:
            type: string
      responses:
        '200':
          description: Expected response to a valid request
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Items"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
components:
  schemas:
    Item:
      required:
        - id
        - label
        - type_id
      properties:
        id:
          type: integer
          format: int64
        label:
          type: string
        value:
          type: string
        type_id:
          type: integer
    Items:
      type: array
      items:
        $ref: "#/components/schemas/Item"
    Error:
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

